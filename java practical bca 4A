## Question 1: Check whether the number entered by user is odd or even

```java
import java.util.Scanner;

public class OddEvenChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        
        if (number % 2 == 0) {
            System.out.println(number + " is an even number.");
        } else {
            System.out.println(number + " is an odd number.");
        }
        
        scanner.close();
    }
}
```

## Question 2: Check whether the number entered by user is prime or not

```java
import java.util.Scanner;

public class PrimeNumberChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        
        boolean isPrime = true;
        
        if (number <= 1) {
            isPrime = false;
        } else {
            for (int i = 2; i <= Math.sqrt(number); i++) {
                if (number % i == 0) {
                    isPrime = false;
                    break;
                }
            }
        }
        
        if (isPrime) {
            System.out.println(number + " is a prime number.");
        } else {
            System.out.println(number + " is not a prime number.");
        }
        
        scanner.close();
    }
}
```

## Question 3: Print the factorial of the number by taking user's input

```java
import java.util.Scanner;

public class FactorialCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter a number to calculate its factorial: ");
        int number = scanner.nextInt();
        
        long factorial = 1;
        
        if (number < 0) {
            System.out.println("Factorial is not defined for negative numbers.");
        } else {
            for (int i = 1; i <= number; i++) {
                factorial *= i;
            }
            System.out.println("Factorial of " + number + " is " + factorial);
        }
        
        scanner.close();
    }
}
```

## Question 4: Print the area of the circle

```java
import java.util.Scanner;

public class CircleArea {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the radius of the circle: ");
        double radius = scanner.nextDouble();
        
        double area = Math.PI * radius * radius;
        
        System.out.println("The area of the circle with radius " + radius + " is " + area);
        
        scanner.close();
    }
}
```

## Question 5: Write a program to generate prime numbers between 1 & given number

```java
import java.util.Scanner;

public class PrimeNumberGenerator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the upper limit: ");
        int upperLimit = scanner.nextInt();
        
        System.out.println("Prime numbers between 1 and " + upperLimit + " are:");
        
        for (int i = 2; i <= upperLimit; i++) {
            boolean isPrime = true;
            
            for (int j = 2; j <= Math.sqrt(i); j++) {
                if (i % j == 0) {
                    isPrime = false;
                    break;
                }
            }
            
            if (isPrime) {
                System.out.print(i + " ");
            }
        }
        
        scanner.close();
    }
}
```

## Question 6: Write a program to find G.C.D of the number

```java
import java.util.Scanner;

public class GCDCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter first number: ");
        int num1 = scanner.nextInt();
        
        System.out.print("Enter second number: ");
        int num2 = scanner.nextInt();
        
        int gcd = findGCD(num1, num2);
        
        System.out.println("GCD of " + num1 + " and " + num2 + " is " + gcd);
        
        scanner.close();
    }
    
    public static int findGCD(int a, int b) {
        if (b == 0) {
            return a;
        }
        return findGCD(b, a % b);
    }
}
```

## Question 7: Write a program to generate pyramid of stars using nested for loops

```java
import java.util.Scanner;

public class StarPyramid {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the number of rows for the pyramid: ");
        int rows = scanner.nextInt();
        
        for (int i = 1; i <= rows; i++) {
            // Print spaces
            for (int j = 1; j <= rows - i; j++) {
                System.out.print(" ");
            }
            
            // Print stars
            for (int k = 1; k <= 2 * i - 1; k++) {
                System.out.print("*");
            }
            
            System.out.println();
        }
        
        scanner.close();
    }
}
```

## Question 8: Write a program to reversed pyramid using for loops & decrement operator

```java
import java.util.Scanner;

public class ReversedPyramid {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the number of rows for the pyramid: ");
        int rows = scanner.nextInt();
        
        for (int i = rows; i >= 1; i--) {
            // Print spaces
            for (int j = 1; j <= rows - i; j++) {
                System.out.print(" ");
            }
            
            // Print stars
            for (int k = 1; k <= 2 * i - 1; k++) {
                System.out.print("*");
            }
            
            System.out.println();
        }
        
        scanner.close();
    }
}
```

## Question 9: Write a program for demonstrate Nested Switch

```java
import java.util.Scanner;

public class NestedSwitchDemo {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("Select a department:");
        System.out.println("1. IT Department");
        System.out.println("2. HR Department");
        System.out.print("Enter your choice (1/2): ");
        
        int department = scanner.nextInt();
        
        switch (department) {
            case 1:
                System.out.println("IT Department selected.");
                System.out.println("Choose a division:");
                System.out.println("1. Development");
                System.out.println("2. Testing");
                System.out.print("Enter your choice (1/2): ");
                
                int itDivision = scanner.nextInt();
                
                switch (itDivision) {
                    case 1:
                        System.out.println("You selected Development division.");
                        break;
                    case 2:
                        System.out.println("You selected Testing division.");
                        break;
                    default:
                        System.out.println("Invalid division choice.");
                }
                break;
                
            case 2:
                System.out.println("HR Department selected.");
                System.out.println("Choose a division:");
                System.out.println("1. Recruitment");
                System.out.println("2. Payroll");
                System.out.print("Enter your choice (1/2): ");
                
                int hrDivision = scanner.nextInt();
                
                switch (hrDivision) {
                    case 1:
                        System.out.println("You selected Recruitment division.");
                        break;
                    case 2:
                        System.out.println("You selected Payroll division.");
                        break;
                    default:
                        System.out.println("Invalid division choice.");
                }
                break;
                
            default:
                System.out.println("Invalid department choice.");
        }
        
        scanner.close();
    }
}
```

## Question 10: Grade calculator

```java
import java.util.Scanner;

public class GradeCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the marks (0-100): ");
        int marks = scanner.nextInt();
        
        char grade;
        
        if (marks >= 90) {
            grade = 'A';
        } else if (marks >= 80) {
            grade = 'B';
        } else if (marks >= 70) {
            grade = 'C';
        } else if (marks >= 60) {
            grade = 'D';
        } else if (marks >= 50) {
            grade = 'E';
        } else {
            grade = 'F';
        }
        
        System.out.println("Grade: " + grade);
        
        scanner.close();
    }
}
```

## Question 11: Find the factorial of a given number using recursion

```java
import java.util.Scanner;

public class RecursiveFactorial {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter a number to calculate its factorial: ");
        int number = scanner.nextInt();
        
        if (number < 0) {
            System.out.println("Factorial is not defined for negative numbers.");
        } else {
            long factorial = calculateFactorial(number);
            System.out.println("Factorial of " + number + " is " + factorial);
        }
        
        scanner.close();
    }
    
    public static long calculateFactorial(int n) {
        if (n == 0 || n == 1) {
            return 1;
        } else {
            return n * calculateFactorial(n - 1);
        }
    }
}
```

## Question 12: Create a class Calculator with the following methods

```java
public class Calculator {
    public int calculateSum(int number1, int number2) {
        return number1 + number2;
    }
    
    public int calculateDifference(int number1, int number2) {
        return number1 - number2;
    }
    
    public int calculateProduct(int number1, int number2) {
        return number1 * number2;
    }
    
    public double calculateQuotient(int number1, int number2) {
        if (number2 == 0) {
            System.out.println("Division by zero is not possible.");
            return Double.NaN;
        }
        return (double) number1 / number2;
    }
    
    public static void main(String[] args) {
        Calculator calc = new Calculator();
        
        int a = 25;
        int b = 5;
        
        System.out.println("Sum: " + calc.calculateSum(a, b));
        System.out.println("Difference: " + calc.calculateDifference(a, b));
        System.out.println("Product: " + calc.calculateProduct(a, b));
        System.out.println("Quotient: " + calc.calculateQuotient(a, b));
    }
}
```

## Question 13: Create a class Biggest that contains a single-dimensional array as a data member and a method display() to find and display the largest element of the array

```java
public class Biggest {
    private int[] array;
    
    public Biggest(int[] arr) {
        this.array = arr;
    }
    
    public void display() {
        if (array == null || array.length == 0) {
            System.out.println("Array is empty.");
            return;
        }
        
        int largest = array[0];
        
        for (int i = 1; i < array.length; i++) {
            if (array[i] > largest) {
                largest = array[i];
            }
        }
        
        System.out.println("The largest element in the array is: " + largest);
    }
    
    public static void main(String[] args) {
        int[] numbers = {23, 45, 12, 78, 56, 89, 34};
        
        Biggest biggestFinder = new Biggest(numbers);
        biggestFinder.display();
    }
}
```

## Question 14: Create a class Rectangle with attributes length and width, each defaulting to 1. The class should include set and get methods for both attributes, and a method to calculate the area of the rectangle

```java
public class Rectangle {
    private double length;
    private double width;
    
    // Default constructor
    public Rectangle() {
        this.length = 1.0;
        this.width = 1.0;
    }
    
    // Parameterized constructor
    public Rectangle(double length, double width) {
        this.length = length;
        this.width = width;
    }
    
    // Set method for length
    public void setLength(double length) {
        if (length > 0.0) {
            this.length = length;
        } else {
            System.out.println("Length must be positive. Setting to default value 1.0");
            this.length = 1.0;
        }
    }
    
    // Get method for length
    public double getLength() {
        return this.length;
    }
    
    // Set method for width
    public void setWidth(double width) {
        if (width > 0.0) {
            this.width = width;
        } else {
            System.out.println("Width must be positive. Setting to default value 1.0");
            this.width = 1.0;
        }
    }
    
    // Get method for width
    public double getWidth() {
        return this.width;
    }
    
    // Method to calculate area
    public double calculateArea() {
        return this.length * this.width;
    }
    
    public static void main(String[] args) {
        // Create rectangle with default dimensions
        Rectangle rect1 = new Rectangle();
        System.out.println("Rectangle 1:");
        System.out.println("Length: " + rect1.getLength());
        System.out.println("Width: " + rect1.getWidth());
        System.out.println("Area: " + rect1.calculateArea());
        
        // Create rectangle with custom dimensions
        Rectangle rect2 = new Rectangle(5.0, 3.0);
        System.out.println("\nRectangle 2:");
        System.out.println("Length: " + rect2.getLength());
        System.out.println("Width: " + rect2.getWidth());
        System.out.println("Area: " + rect2.calculateArea());
        
        // Modify rectangle dimensions
        rect2.setLength(7.5);
        rect2.setWidth(2.5);
        System.out.println("\nModified Rectangle 2:");
        System.out.println("Length: " + rect2.getLength());
        System.out.println("Width: " + rect2.getWidth());
        System.out.println("Area: " + rect2.calculateArea());
    }
}
```

## Question 15: Write a program to accept a student's name and three marks. Calculate the total and average, and display the result using a class and object

```java
import java.util.Scanner;

class Student {
    private String name;
    private int[] marks;
    private int total;
    private double average;
    
    public Student(String name, int mark1, int mark2, int mark3) {
        this.name = name;
        this.marks = new int[3];
        this.marks[0] = mark1;
        this.marks[1] = mark2;
        this.marks[2] = mark3;
        calculateResult();
    }
    
    private void calculateResult() {
        this.total = 0;
        for (int mark : marks) {
            this.total += mark;
        }
        this.average = (double) this.total / marks.length;
    }
    
    public void displayResult() {
        System.out.println("\nStudent Details:");
        System.out.println("Name: " + this.name);
        for (int i = 0; i < marks.length; i++) {
            System.out.println("Mark " + (i + 1) + ": " + marks[i]);
        }
        System.out.println("Total Marks: " + this.total);
        System.out.println("Average: " + this.average);
    }
}

public class StudentMarksCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter student's name: ");
        String name = scanner.nextLine();
        
        System.out.print("Enter mark 1: ");
        int mark1 = scanner.nextInt();
        
        System.out.print("Enter mark 2: ");
        int mark2 = scanner.nextInt();
        
        System.out.print("Enter mark 3: ");
        int mark3 = scanner.nextInt();
        
        Student student = new Student(name, mark1, mark2, mark3);
        student.displayResult();
        
        scanner.close();
    }
}
```

## Question 16: WAP to search an element in an array

```java
import java.util.Scanner;

public class ArraySearch {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the size of the array: ");
        int size = scanner.nextInt();
        
        int[] array = new int[size];
        
        System.out.println("Enter the elements of the array:");
        for (int i = 0; i < size; i++) {
            System.out.print("Element " + (i + 1) + ": ");
            array[i] = scanner.nextInt();
        }
        
        System.out.print("Enter the element to search: ");
        int searchElement = scanner.nextInt();
        
        int position = -1;
        for (int i = 0; i < size; i++) {
            if (array[i] == searchElement) {
                position = i;
                break;
            }
        }
        
        if (position != -1) {
            System.out.println("Element " + searchElement + " found at position " + position + " (index " + position + ")");
        } else {
            System.out.println("Element " + searchElement + " not found in the array.");
        }
        
        scanner.close();
    }
}
```

## Question 17: WAP to print the elements of an array present on even position

```java
import java.util.Scanner;

public class ElementsAtEvenPositions {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the size of the array: ");
        int size = scanner.nextInt();
        
        int[] array = new int[size];
        
        System.out.println("Enter the elements of the array:");
        for (int i = 0; i < size; i++) {
            System.out.print("Element " + (i + 1) + ": ");
            array[i] = scanner.nextInt();
        }
        
        System.out.println("Elements at even positions (1-indexed):");
        for (int i = 1; i < size; i += 2) {
            System.out.println("Position " + (i + 1) + " (index " + i + "): " + array[i]);
        }
        
        scanner.close();
    }
}
```

## Question 18: WAP to sort the array elements in an ascending order

```java
import java.util.Scanner;

public class ArraySorting {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the size of the array: ");
        int size = scanner.nextInt();
        
        int[] array = new int[size];
        
        System.out.println("Enter the elements of the array:");
        for (int i = 0; i < size; i++) {
            System.out.print("Element " + (i + 1) + ": ");
            array[i] = scanner.nextInt();
        }
        
        // Bubble sort algorithm
        for (int i = 0; i < size - 1; i++) {
            for (int j = 0; j < size - i - 1; j++) {
                if (array[j] > array[j + 1]) {
                    // Swap elements
                    int temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }
            }
        }
        
        System.out.println("Array after sorting in ascending order:");
        for (int i = 0; i < size; i++) {
            System.out.print(array[i] + " ");
        }
        
        scanner.close();
    }
}
```

## Question 19: Print the sum of 5 elements in 1-D arrays

```java
import java.util.Scanner;

public class ArraySum {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        int[] array = new int[5];
        
        System.out.println("Enter 5 elements of the array:");
        for (int i = 0; i < 5; i++) {
            System.out.print("Element " + (i + 1) + ": ");
            array[i] = scanner.nextInt();
        }
        
        int sum = 0;
        for (int i = 0; i < 5; i++) {
            sum += array[i];
        }
        
        System.out.println("Sum of the 5 elements: " + sum);
        
        scanner.close();
    }
}
```

## Question 20: Print the sum of elements of 2*2 matrix in 2-D array

```java
import java.util.Scanner;

public class MatrixSum {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        int[][] matrix = new int[2][2];
        
        System.out.println("Enter the elements of 2x2 matrix:");
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < 2; j++) {
                System.out.print("Element at position [" + i + "][" + j + "]: ");
                matrix[i][j] = scanner.nextInt();
            }
        }
        
        int sum = 0;
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < 2; j++) {
                sum += matrix[i][j];
            }
        }
        
        System.out.println("Sum of all elements in the 2x2 matrix: " + sum);
        
        scanner.close();
    }
}
```


